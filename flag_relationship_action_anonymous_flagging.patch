diff --git a/src/ActionLink/ActionLinkTypeBase.php b/src/ActionLink/ActionLinkTypeBase.php
index 2cd9ef2..29f9d8e 100644
--- a/src/ActionLink/ActionLinkTypeBase.php
+++ b/src/ActionLink/ActionLinkTypeBase.php
@@ -84,7 +84,8 @@ abstract class ActionLinkTypeBase extends PluginBase implements ActionLinkTypePl
   public function getAsLink(FlagInterface $flag, EntityInterface $entity) {
     $action = $this->getAction($flag, $entity);
     $url = $this->getUrl($action, $flag, $entity);
-    $url->setOption('query', ['destination' => $this->getDestination()]);
+    // $url->setOption('query', ['destination' => $this->getDestination()]);
+    $url->setOption('query', ['destination' => \Drupal::request()->getRequestUri()]);
     $title = $flag->getShortText($action);
 
     return Link::fromTextAndUrl($title, $url);
diff --git a/src/Plugin/views/relationship/FlagViewsRelationship.php b/src/Plugin/views/relationship/FlagViewsRelationship.php
index 81d0964..610e39c 100644
--- a/src/Plugin/views/relationship/FlagViewsRelationship.php
+++ b/src/Plugin/views/relationship/FlagViewsRelationship.php
@@ -130,18 +130,18 @@ class FlagViewsRelationship extends RelationshipPluginBase {
     if ($this->options['user_scope'] == 'current' && !$flag->isGlobal()) {
       $this->definition['extra'][] = [
         'field' => 'uid',
-        'value' => '***CURRENT_USER***',
+        'value' => \Drupal::currentUser()->id(),
         'numeric' => TRUE,
       ];
       $flag_roles = user_roles(FALSE, "flag " . $flag->id());
-      if (isset($flag_roles[RoleInterface::ANONYMOUS_ID])) {
+      if (isset($flag_roles[RoleInterface::ANONYMOUS_ID]) && \Drupal::currentUser()->isAnonymous()) {
         // Disable page caching for anonymous users.
         $this->pageCacheKillSwitch->trigger();
 
         // Add in the SID from Session API for anonymous users.
         $this->definition['extra'][] = [
-          'field' => 'sid',
-          'value' => '***FLAG_CURRENT_USER_SID***',
+          'field' => 'session_id',
+          'value' => \Drupal::request()->getSession()->getId(),
           'numeric' => TRUE,
         ];
       }
